/*
 *  MIT License
 *
 * Copyright (c) 2018.  Icaro R D Temponi
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.2.61"
    id("com.palantir.git-version") version "0.11.0"
    id("maven")
    id("jacoco")
}
apply(from: "buildSrc/libs.gradle")

project.group = "com.github.icarohs7"
project.version = gitVersion().toString().find('(\\d\\.\\d\\.\\d)')
project.description = "A library to check artifact versions programmatically"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    //Fuel
    implementation "com.github.kittinunf.fuel:fuel-coroutines:${versions.fuel}"

    //Klaxon
    implementation "com.beust:klaxon:${versions.klaxon}"

    //Test
    testImplementation "se.lovef:kotlin-assert-utils:${versions.kotlinAssertUtils}"
}

repositories {
    mavenCentral()
    jcenter()
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check {
    dependsOn jacocoTestReport
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}